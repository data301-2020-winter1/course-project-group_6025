<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1018.2303                               -->
<workbook source-build='2020.3.2 (20203.20.1018.2303)' source-platform='win' version='18.1' xml:base='https://dub01.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <NavigationAction />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Milestone4andLab10ChessAnalysisRobinson' path='/t/data301dashboards/workbooks' revision='1.0' site='data301dashboards' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Project Data+' inline='true' name='federated.1m1kh5l1vbg2sx1dsof2u1u3wj30' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Project Data' name='textscan.1l6svxf0n4gxsy1axj2rf0bxpq9c'>
            <connection class='textscan' directory='C:/Users/robii/Desktop' filename='Project Data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1l6svxf0n4gxsy1axj2rf0bxpq9c' name='Project Data.csv' table='[Project Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='turns' ordinal='1' />
            <column datatype='string' name='victory_status' ordinal='2' />
            <column datatype='string' name='winner' ordinal='3' />
            <column datatype='integer' name='white_rating' ordinal='4' />
            <column datatype='integer' name='black_rating' ordinal='5' />
            <column datatype='string' name='moves' ordinal='6' />
            <column datatype='string' name='opening_eco' ordinal='7' />
            <column datatype='string' name='opening_name' ordinal='8' />
            <column datatype='integer' name='opening_ply' ordinal='9' />
            <column datatype='datetime' name='date_start' ordinal='10' />
            <column datatype='datetime' name='date_end' ordinal='11' />
            <column datatype='integer' name='abs_rating' ordinal='12' />
            <column datatype='string' name='length' ordinal='13' />
            <column datatype='string' name='cleaned_opening_name' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1l6svxf0n4gxsy1axj2rf0bxpq9c' name='Project Data.csv' table='[Project Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='turns' ordinal='1' />
            <column datatype='string' name='victory_status' ordinal='2' />
            <column datatype='string' name='winner' ordinal='3' />
            <column datatype='integer' name='white_rating' ordinal='4' />
            <column datatype='integer' name='black_rating' ordinal='5' />
            <column datatype='string' name='moves' ordinal='6' />
            <column datatype='string' name='opening_eco' ordinal='7' />
            <column datatype='string' name='opening_name' ordinal='8' />
            <column datatype='integer' name='opening_ply' ordinal='9' />
            <column datatype='datetime' name='date_start' ordinal='10' />
            <column datatype='datetime' name='date_end' ordinal='11' />
            <column datatype='integer' name='abs_rating' ordinal='12' />
            <column datatype='string' name='length' ordinal='13' />
            <column datatype='string' name='cleaned_opening_name' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Project Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Project Data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>turns</remote-name>
            <remote-type>20</remote-type>
            <local-name>[turns]</local-name>
            <parent-name>[Project Data.csv]</parent-name>
            <remote-alias>turns</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>victory_status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[victory_status]</local-name>
            <parent-name>[Project Data.csv]</parent-name>
            <remote-alias>victory_status</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[Project Data.csv]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>white_rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[white_rating]</local-name>
            <parent-name>[Project Data.csv]</parent-name>
            <remote-alias>white_rating</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>black_rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[black_rating]</local-name>
            <parent-name>[Project Data.csv]</parent-name>
            <remote-alias>black_rating</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>moves</remote-name>
            <remote-type>129</remote-type>
            <local-name>[moves]</local-name>
            <parent-name>[Project Data.csv]</parent-name>
            <remote-alias>moves</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>opening_eco</remote-name>
            <remote-type>129</remote-type>
            <local-name>[opening_eco]</local-name>
            <parent-name>[Project Data.csv]</parent-name>
            <remote-alias>opening_eco</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>opening_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[opening_name]</local-name>
            <parent-name>[Project Data.csv]</parent-name>
            <remote-alias>opening_name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>opening_ply</remote-name>
            <remote-type>20</remote-type>
            <local-name>[opening_ply]</local-name>
            <parent-name>[Project Data.csv]</parent-name>
            <remote-alias>opening_ply</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_start</remote-name>
            <remote-type>134</remote-type>
            <local-name>[date_start]</local-name>
            <parent-name>[Project Data.csv]</parent-name>
            <remote-alias>date_start</remote-alias>
            <ordinal>10</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_end</remote-name>
            <remote-type>134</remote-type>
            <local-name>[date_end]</local-name>
            <parent-name>[Project Data.csv]</parent-name>
            <remote-alias>date_end</remote-alias>
            <ordinal>11</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>abs_rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[abs_rating]</local-name>
            <parent-name>[Project Data.csv]</parent-name>
            <remote-alias>abs_rating</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>length</remote-name>
            <remote-type>129</remote-type>
            <local-name>[length]</local-name>
            <parent-name>[Project Data.csv]</parent-name>
            <remote-alias>length</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cleaned_opening_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cleaned_opening_name]</local-name>
            <parent-name>[Project Data.csv]</parent-name>
            <remote-alias>cleaned_opening_name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column datatype='string' name='[Winner (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[winner]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;white&quot;'>
            <value>&quot;white&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Project Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE]' role='measure' type='quantitative' />
      <column caption='Abs Rating' datatype='integer' name='[abs_rating]' role='measure' type='quantitative' />
      <column caption='Black Rating' datatype='integer' name='[black_rating]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Cleaned Opening Name' datatype='string' name='[cleaned_opening_name]' role='dimension' type='nominal' />
      <column caption='Date End' datatype='datetime' name='[date_end]' role='dimension' type='ordinal' />
      <column caption='Date Start' datatype='datetime' name='[date_start]' role='dimension' type='ordinal' />
      <column caption='Length' datatype='string' name='[length]' role='dimension' type='nominal' />
      <column caption='Moves' datatype='string' name='[moves]' role='dimension' type='nominal' />
      <column caption='Opening Eco' datatype='string' name='[opening_eco]' role='dimension' type='nominal' />
      <column caption='Opening Name' datatype='string' name='[opening_name]' role='dimension' type='nominal' />
      <column caption='Opening Ply' datatype='integer' name='[opening_ply]' role='measure' type='quantitative' />
      <column caption='Turns' datatype='integer' name='[turns]' role='measure' type='quantitative' />
      <column caption='Victory Status' datatype='string' name='[victory_status]' role='dimension' type='nominal' />
      <column caption='White Rating' datatype='integer' name='[white_rating]' role='measure' type='quantitative' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[abs_rating]' derivation='Avg' name='[avg:abs_rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[black_rating]' derivation='Avg' name='[avg:black_rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[opening_ply]' derivation='Avg' name='[avg:opening_ply:qk]' pivot='key' type='quantitative' />
      <column-instance column='[white_rating]' derivation='Avg' name='[avg:white_rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[abs_rating]' derivation='Count' name='[cnt:abs_rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[black_rating]' derivation='Count' name='[cnt:black_rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[opening_ply]' derivation='Count' name='[cnt:opening_ply:qk]' pivot='key' type='quantitative' />
      <column-instance column='[opening_ply]' derivation='CountD' name='[ctd:opening_ply:qk]' pivot='key' type='quantitative' />
      <column-instance column='[black_rating]' derivation='None' name='[none:black_rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cleaned_opening_name]' derivation='None' name='[none:cleaned_opening_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[opening_eco]' derivation='None' name='[none:opening_eco:nk]' pivot='key' type='nominal' />
      <column-instance column='[opening_ply]' derivation='None' name='[none:opening_ply:qk]' pivot='key' type='quantitative' />
      <column-instance column='[victory_status]' derivation='None' name='[none:victory_status:nk]' pivot='key' type='nominal' />
      <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
      <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[abs_rating]' derivation='Sum' name='[sum:abs_rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[black_rating]' derivation='Sum' name='[sum:black_rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[opening_ply]' derivation='Sum' name='[sum:opening_ply:qk]' pivot='key' type='quantitative' />
      <column-instance column='[turns]' derivation='Sum' name='[sum:turns:qk]' pivot='key' type='quantitative' />
      <column-instance column='[white_rating]' derivation='Sum' name='[sum:white_rating:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Cleaned Opening Name)' hidden='true' name='[Action (Cleaned Opening Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[cleaned_opening_name]' />
        </groupfilter>
      </group>
      <group caption='Action (Cleaned Opening Name,Opening Eco,Winner)' hidden='true' name='[Action (Cleaned Opening Name,Opening Eco,Winner)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[cleaned_opening_name]' />
          <groupfilter function='level-members' level='[opening_eco]' />
          <groupfilter function='level-members' level='[winner]' />
        </groupfilter>
      </group>
      <group caption='Action (Cleaned Opening Name,Winner)' hidden='true' name='[Action (Cleaned Opening Name,Winner)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[cleaned_opening_name]' />
          <groupfilter function='level-members' level='[winner]' />
        </groupfilter>
      </group>
      <group caption='Action (Opening Eco)' hidden='true' name='[Action (Opening Eco)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[opening_eco]' />
        </groupfilter>
      </group>
      <group caption='Action (Opening Eco,Winner)' hidden='true' name='[Action (Opening Eco,Winner)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[opening_eco]' />
          <groupfilter function='level-members' level='[winner]' />
        </groupfilter>
      </group>
      <group caption='Action (Winner (group),Winner)' hidden='true' name='[Action (Winner (group),Winner)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Winner (group)]' />
          <groupfilter function='level-members' level='[winner]' />
        </groupfilter>
      </group>
      <group caption='Action (Winner)' hidden='true' name='[Action (Winner)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[winner]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:victory_status:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;mate&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;outoftime&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;resign&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:opening_eco:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;A08&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;A30&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;A52&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;A97&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B19&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B41&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B72&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B95&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;C17&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;C39&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;C59&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;C83&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;D14&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;D40&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;D76&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E11&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E47&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E80&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A00&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A21&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A44&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A80&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B10&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B32&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B54&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B86&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;C09&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;C30&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;C51&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;C71&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;D05&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;D30&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;D55&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;D93&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E33&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E64&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A04&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A25&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A48&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A84&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B14&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B36&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B60&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B91&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;C13&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;C35&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;C55&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;C78&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;D10&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;D35&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;D59&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E01&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E40&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E71&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;A12&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;A35&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;A57&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B02&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B23&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B45&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B76&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;C01&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;C22&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;C43&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;C63&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;C90&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;D18&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;D45&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;D81&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E16&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E52&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E90&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;A09&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;A31&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;A53&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;A99&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B20&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B42&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B73&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B96&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;C18&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;C40&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;C60&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;C84&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;D15&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;D41&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;D77&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E12&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E48&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E81&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A05&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A27&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A49&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A85&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B15&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B38&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B62&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B92&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;C14&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;C36&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;C56&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;C75&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;C79&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;D11&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;D36&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;D60&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E03&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E42&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E73&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;A18&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;A42&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;A70&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B08&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B30&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B52&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B83&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;C07&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;C28&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;C49&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;C69&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;C94&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;D03&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;D25&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;D52&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;D91&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E30&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E61&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E98&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A01&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A22&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A45&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A81&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B11&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B33&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B56&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B87&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;C10&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;C31&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;C52&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;C72&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;D06&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;D31&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;D56&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;D94&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E34&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E67&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;A16&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;A40&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;A65&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B06&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B28&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B50&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B81&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;C05&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;C26&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;C47&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;C67&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;D01&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;D22&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;D50&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;D87&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E21&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E59&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E95&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A06&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A28&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A50&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A89&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B17&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B39&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B70&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B93&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;C15&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;C37&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;C57&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;C80&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;D12&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;D37&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;D70&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E06&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E44&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E76&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;A13&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;A36&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;A58&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B03&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B24&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B46&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B77&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;C02&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;C23&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;C44&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;C64&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;C91&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;D19&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;D46&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;D82&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E17&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E53&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E91&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;A14&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;A38&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;A59&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B04&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B25&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B47&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B78&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;C03&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;C24&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;C45&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;C65&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;C92&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;D20&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;D47&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;D85&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E18&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E54&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E92&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;A17&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;A41&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;A67&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B07&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B29&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B51&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B82&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;C06&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;C27&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;C48&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;C68&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;D02&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;D24&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;D51&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;D90&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E24&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E60&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E97&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;A20&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;A43&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;A71&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;A73&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B09&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B31&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B53&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B84&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;C08&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;C29&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;C50&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;C70&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;D04&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;D26&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;D53&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;D92&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E32&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E63&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;A10&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;A33&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;A54&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B00&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B21&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B43&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B74&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B98&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C20&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C41&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C61&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C88&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;D16&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;D43&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;D78&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E14&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E50&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E72&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E87&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A07&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A29&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A51&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A91&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B18&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B40&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B71&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B94&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;C16&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;C38&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;C58&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;C81&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;D13&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;D38&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;D74&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E10&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E46&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E77&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A02&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A23&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A46&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A82&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B12&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B34&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B57&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B88&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;C11&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;C33&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;C53&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;C74&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;D07&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;D32&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;D57&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;D95&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E27&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E35&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E68&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;A15&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;A39&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;A60&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B05&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B27&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B48&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B80&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;C04&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;C25&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;C46&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;C66&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;D00&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;D21&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;D48&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;D86&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E20&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E56&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E94&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;A11&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;A34&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;A56&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B01&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B22&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B44&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B75&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;C00&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;C21&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;C42&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;C62&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;C89&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;D17&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;D44&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;D80&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E15&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E51&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E88&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A03&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A24&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A47&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A83&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B13&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B35&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B58&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B90&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;C12&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;C32&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;C34&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;C54&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;C77&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;D08&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;D34&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;D58&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E00&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E38&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E70&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Winner (group)]' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;white&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:abs_rating:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[cnt:abs_rating:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[sum:abs_rating:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:opening_ply:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[cnt:opening_ply:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[ctd:opening_ply:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:opening_ply:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[sum:opening_ply:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:white_rating:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[sum:white_rating:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[__tableau_internal_object_id__].[cnt:Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[sum:turns:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:black_rating:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[cnt:black_rating:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:black_rating:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[sum:black_rating:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:cleaned_opening_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Benoni Defense&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Horwitz Defense&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kangaroo Defense&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mieses Opening&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portuguese Opening&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Semi-Slav Defense&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Australian Defense&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Center Game&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Giuoco Piano&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nimzowitsch Defense&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paleface Attack&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rubinstein Opening&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Van Geet Opening&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Creepy Crawly Formation&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Czech Defense&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gruenfeld Defense&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nimzowitsch-Larsen Attack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pirc Defense&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Scandinavian Defense&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ware Defense&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Blumenfeld Countergambit&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;English Defense&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mikenas Defense&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nimzo-Indian Defense&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Queen&apos;s Indian Defense&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sodium Attack&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bird Opening&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungarian Opening&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;King&apos;s Pawn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Old Indian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pterodactyl Defense&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sicilian Defense&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dutch Defense&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Englund Gambit Complex&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italian Game&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lion Defense&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Richter-Veresov Attack&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Scotch Gambit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ware Opening&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Anderssen Opening&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Doery Defense&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Defense&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;King&apos;s Indian Defense&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Old Indian Defense&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trompowsky Attack&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Barnes Defense&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clemenz Opening&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Global Opening&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;King&apos;s Pawn Game&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Petrov&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russian Game&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Van&apos;t Kruijs Opening&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Amar Opening&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canard Opening&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Four Knights Game&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;King&apos;s Indian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rat Defense&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Three Knights Opening&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Danish Gambit&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Goldsmith Defense&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gunderam Defense&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;London System&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Polish Opening&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Scotch Game&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yusupov-Rubinstein System&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bogo-Indian Defense&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;English Opening&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kadas Opening&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Polish Defense&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Queen&apos;s Pawn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St. George Defense&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Borg Defense&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Englund Gambit&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nimzo-Larsen Attack&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Queen&apos;s Pawn Game&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Semi-Bononi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;System&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Amazon Attack&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caro-Kann Defense&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Franco-Benoni Defense&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;King&apos;s Indian Attack&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reti Opening&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Torre Attack&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barnes Opening&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Duras Gambit&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gedult&apos;s Opening&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;King&apos;s Knight Opening&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Owen Defense&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Robatsch (Modern) Defense&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bishop&apos;s Opening&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Indian Defense&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lemming Defense&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Modern Defense&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Queen&apos;s Gambit&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slav Defense&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Benko Gambit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guatemala Defense&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hippopotamus Defense&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Old Benoni Defense&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ponziani Opening&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Valencia Opening&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zukertort Opening&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carr Defense&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colle System&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Irish Gambit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;King&apos;s Pawn Opening&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Petrov&apos;s Defense&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ruy Lopez&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vienna Game&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alekhine Defense&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Budapest Defense&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indian Game&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;King&apos;s Gambit&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Queen&apos;s Pawn Opening&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tarrasch Defense&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Blackmar-Diemer Gambit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Elephant Gambit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexican Defense&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Neo-Gruenfeld Defense&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Queen&apos;s Indian Accelerated&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slav Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Catalan Opening&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Crab Opening&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grob Opening&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Latvian Gambit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philidor Defense&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saragossa Opening&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wade Defense&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:winner:nk]' type='palette'>
            <map to='#5fbb68'>
              <bucket>&quot;black&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;draw&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;white&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Project Data.csv' id='Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE'>
            <properties context=''>
              <relation connection='textscan.1l6svxf0n4gxsy1axj2rf0bxpq9c' name='Project Data.csv' table='[Project Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='turns' ordinal='1' />
                  <column datatype='string' name='victory_status' ordinal='2' />
                  <column datatype='string' name='winner' ordinal='3' />
                  <column datatype='integer' name='white_rating' ordinal='4' />
                  <column datatype='integer' name='black_rating' ordinal='5' />
                  <column datatype='string' name='moves' ordinal='6' />
                  <column datatype='string' name='opening_eco' ordinal='7' />
                  <column datatype='string' name='opening_name' ordinal='8' />
                  <column datatype='integer' name='opening_ply' ordinal='9' />
                  <column datatype='datetime' name='date_start' ordinal='10' />
                  <column datatype='datetime' name='date_end' ordinal='11' />
                  <column datatype='integer' name='abs_rating' ordinal='12' />
                  <column datatype='string' name='length' ordinal='13' />
                  <column datatype='string' name='cleaned_opening_name' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Opening Preferences by Colour' type='sheet' worksheet='Wins per Colour' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Opening Preferences by Colour' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Opening Preferences by Colour' type='sheet' worksheet='Most Popular Openings' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Opening Preferences by Colour' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Absolute Rating Analysis' type='sheet' worksheet='Complexity of Opening' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Absolute Rating Analysis' />
      </command>
    </action>
    <nav-action caption='GoToSheet1' name='[Action2]'>
      <activation type='on-select' />
      <source dashboard='Opening Preferences by Colour' type='sheet' />
      <params>
        <param name='sheet' value='None' />
      </params>
    </nav-action>
  </actions>
  <worksheets>
    <worksheet name='Complexity of Opening'>
      <table>
        <view>
          <datasources>
            <datasource caption='Project Data+' name='federated.1m1kh5l1vbg2sx1dsof2u1u3wj30' />
          </datasources>
          <datasource-dependencies datasource='federated.1m1kh5l1vbg2sx1dsof2u1u3wj30'>
            <column caption='Abs Rating' datatype='integer' name='[abs_rating]' role='measure' type='quantitative' />
            <column-instance column='[abs_rating]' derivation='Avg' name='[avg:abs_rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[opening_ply]' derivation='Avg' name='[avg:opening_ply:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Cleaned Opening Name' datatype='string' name='[cleaned_opening_name]' role='dimension' type='nominal' />
            <column-instance column='[cleaned_opening_name]' derivation='None' name='[none:cleaned_opening_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Opening Ply' datatype='integer' name='[opening_ply]' role='measure' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]'>
            <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:opening_ply:qk]' value='76' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='51' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:abs_rating:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#a7513a</color>
                <color>#b16854</color>
                <color>#bb8171</color>
                <color>#c59c91</color>
                <color>#cfb9b4</color>
                <color>#d9d9d9</color>
                <color>#bac6df</color>
                <color>#99b2e5</color>
                <color>#769dec</color>
                <color>#5086f2</color>
                <color>#296ef8</color>
                <color>#0055ff</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:abs_rating:qk]' />
              <lod column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:opening_ply:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:opening_ply:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:opening_ply:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{DA242306-F01C-4DD1-A915-D9E9C1E108C2}' />
    </worksheet>
    <worksheet name='Most Popular Openings'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Project Data+' name='federated.1m1kh5l1vbg2sx1dsof2u1u3wj30' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1m1kh5l1vbg2sx1dsof2u1u3wj30'>
            <_.fcp.ObjectModelTableType.false...column caption='Project Data.csv' datatype='integer' name='[__tableau_internal_object_id__].[Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE]' role='measure' type='quantitative' />
            <column datatype='string' name='[Winner (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[winner]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;white&quot;'>
                  <value>&quot;white&quot;</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='Project Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Cleaned Opening Name' datatype='string' name='[cleaned_opening_name]' role='dimension' type='nominal' />
            <column-instance column='[cleaned_opening_name]' derivation='None' name='[none:cleaned_opening_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[Action (Winner (group),Winner)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Winner (group)]' />
              <groupfilter function='level-members' level='[winner]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[Action (Winner)]'>
            <groupfilter function='level-members' level='[winner]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[__tableau_internal_object_id__].[cnt:Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE:qk]' included-values='all' />
          <filter class='categorical' column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:cleaned_opening_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[__tableau_internal_object_id__].[cnt:Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[__tableau_internal_object_id__].[cnt:Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE:qk]</column>
            <column>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[Action (Winner)]</column>
            <column>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[Action (Winner (group),Winner)]</column>
            <column>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[__tableau_internal_object_id__].[cnt:Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE:qk]' scope='cols' value='Count' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#b4b4b4' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' data-class='subtotal' value='#00000000' />
            <format attr='band-color' scope='cols' value='#666666' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#00000000' />
            <format attr='background-color' data-class='subtotal' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#898989' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#d4d4d4' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]</rows>
        <cols>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[__tableau_internal_object_id__].[cnt:Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE:qk]</cols>
      </table>
      <simple-id uuid='{6068A39A-C23E-4820-AB35-415EC11E403A}' />
    </worksheet>
    <worksheet name='Opening Move Wins by Colour'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Project Data+' name='federated.1m1kh5l1vbg2sx1dsof2u1u3wj30' />
          </datasources>
          <datasource-dependencies datasource='federated.1m1kh5l1vbg2sx1dsof2u1u3wj30'>
            <_.fcp.ObjectModelTableType.false...column caption='Project Data.csv' datatype='integer' name='[__tableau_internal_object_id__].[Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE]' role='measure' type='quantitative' />
            <column datatype='string' name='[Winner (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[winner]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;white&quot;'>
                  <value>&quot;white&quot;</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='Project Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Cleaned Opening Name' datatype='string' name='[cleaned_opening_name]' role='dimension' type='nominal' />
            <column-instance column='[cleaned_opening_name]' derivation='None' name='[none:cleaned_opening_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[victory_status]' derivation='None' name='[none:victory_status:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Victory Status' datatype='string' name='[victory_status]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[Action (Cleaned Opening Name)]'>
            <groupfilter function='level-members' level='[cleaned_opening_name]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[Action (Winner (group),Winner)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Winner (group)]' />
              <groupfilter function='level-members' level='[winner]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[Action (Winner)]'>
            <groupfilter function='level-members' level='[winner]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:cleaned_opening_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:victory_status:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([winner])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:victory_status:nk]' />
                  <groupfilter function='member' level='[none:victory_status:nk]' member='&quot;draw&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:victory_status:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;mate&quot;</bucket>
              <bucket>&quot;resign&quot;</bucket>
              <bucket>&quot;outoftime&quot;</bucket>
              <bucket>&quot;draw&quot;</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[__tableau_internal_object_id__].[cnt:Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:victory_status:nk]' member-value='&quot;mate&quot;' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:victory_status:nk]</column>
            <column>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[:Measure Names]</column>
            <column>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]</column>
            <column>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[Action (Winner (group),Winner)]</column>
            <column>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[Action (Cleaned Opening Name)]</column>
            <column>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[Action (Winner)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[__tableau_internal_object_id__].[cnt:Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE:qk]' value='22' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:victory_status:nk]' value='10' />
            <format attr='font-size' data-class='subtotal' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:victory_status:nk]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]' value='12' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#e6e6e6' />
            <format attr='background-color' data-class='total' value='#00000000' />
            <format attr='band-color' scope='rows' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#d4d4d4' />
            <format attr='band-level' scope='rows' value='1' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='6' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0214917659759521' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]</rows>
        <cols>([federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:victory_status:nk] * [federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[__tableau_internal_object_id__].[cnt:Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE:qk])</cols>
      </table>
      <simple-id uuid='{009D7074-B800-46F2-950F-0E79077AE748}' />
    </worksheet>
    <worksheet name='Openings Per Rating'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Popular Openings by Absolute Rating</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Project Data+' name='federated.1m1kh5l1vbg2sx1dsof2u1u3wj30' />
          </datasources>
          <datasource-dependencies datasource='federated.1m1kh5l1vbg2sx1dsof2u1u3wj30'>
            <column caption='Abs Rating' datatype='integer' name='[abs_rating]' role='measure' type='quantitative' />
            <column-instance column='[abs_rating]' derivation='Avg' name='[avg:abs_rating:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Cleaned Opening Name' datatype='string' name='[cleaned_opening_name]' role='dimension' type='nominal' />
            <column-instance column='[cleaned_opening_name]' derivation='None' name='[none:cleaned_opening_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[Action (Cleaned Opening Name)]'>
            <groupfilter function='level-members' level='[cleaned_opening_name]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:abs_rating:qk]' included-values='in-range-or-null'>
            <min>-445.0</min>
            <max>943.0</max>
          </filter>
          <filter class='categorical' column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([abs_rating])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:cleaned_opening_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;black&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;white&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]</column>
            <column>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:abs_rating:qk]</column>
            <column>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]</column>
            <column>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[Action (Cleaned Opening Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]' value='99' />
            <format attr='tick-color' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:abs_rating:qk]' value='#000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]' value='37' />
            <format attr='border-color' value='#c0c0c0' />
            <format attr='border-style' value='solid' />
            <format attr='font-size' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:abs_rating:qk]' value='11' />
            <format attr='font-weight' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:abs_rating:qk]' value='normal' />
            <format attr='font-size' data-class='subtotal' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:abs_rating:qk]' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='24' />
            <format attr='background-color' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:abs_rating:qk]' value='#d4d4d4' />
            <format attr='border-color' value='#c0c0c0' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='font-size' data-class='subtotal' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]' value='9' />
            <format attr='font-size' data-class='total' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]' value='9' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]' value='0' />
            <format attr='font-size' scope='rows' value='7' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#c0c0c0' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' data-class='total' value='#d4d4d4' />
            <format attr='border-color' data-class='subtotal' value='#c0c0c0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#d4d4d4' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:abs_rating:qk]' value='9' />
            <format attr='color' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:abs_rating:qk]' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]</rows>
        <cols>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:abs_rating:qk]</cols>
      </table>
      <simple-id uuid='{D6ED84E8-6A32-435E-9D3B-1C13562E1D6D}' />
    </worksheet>
    <worksheet name='Wins per Colour'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Project Data+' name='federated.1m1kh5l1vbg2sx1dsof2u1u3wj30' />
          </datasources>
          <datasource-dependencies datasource='federated.1m1kh5l1vbg2sx1dsof2u1u3wj30'>
            <_.fcp.ObjectModelTableType.true...column caption='Project Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Cleaned Opening Name' datatype='string' name='[cleaned_opening_name]' role='dimension' type='nominal' />
            <column-instance column='[cleaned_opening_name]' derivation='None' name='[none:cleaned_opening_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Project Data.csv' datatype='integer' name='[__tableau_internal_object_id__].[Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[Action (Cleaned Opening Name)]'>
            <groupfilter function='level-members' level='[cleaned_opening_name]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:cleaned_opening_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;black&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;white&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[Action (Cleaned Opening Name)]</column>
            <column>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]</column>
            <column>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='372' />
            <format attr='height' value='278' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]' value='#333333' />
            <format attr='font-weight' data-class='subtotal' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]' value='bold' />
            <format attr='font-weight' data-class='total' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]' value='bold' />
            <format attr='font-size' field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]' value='9' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]' />
              <wedge-size column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[__tableau_internal_object_id__].[cnt:Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE:qk]' />
              <size column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[__tableau_internal_object_id__].[cnt:Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE:qk]' />
              <text column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6811602115631104' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CBFB183B-1187-433E-AEE4-4DA39B0B41B2}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Absolute Rating Analysis'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Project Data+' name='federated.1m1kh5l1vbg2sx1dsof2u1u3wj30' />
      </datasources>
      <datasource-dependencies datasource='federated.1m1kh5l1vbg2sx1dsof2u1u3wj30'>
        <column caption='Abs Rating' datatype='integer' name='[abs_rating]' role='measure' type='quantitative' />
        <column-instance column='[abs_rating]' derivation='Avg' name='[avg:abs_rating:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='10' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98056' id='15' param='horz' w='98826' x='587' y='972'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98056' id='13' w='87096' x='587' y='972'>
              <zone h='98056' id='12' name='Openings Per Rating' w='61583' x='587' y='972'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98056' id='61' name='Complexity of Opening' w='25513' x='62170' y='972'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98056' id='14' is-fixed='true' param='vert' w='11730' x='87683' y='972'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10207' id='16' name='Openings Per Rating' pane-specification-id='0' param='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]' w='11730' x='87683' y='972'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9842' id='62' name='Complexity of Opening' pane-specification-id='0' param='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:abs_rating:qk]' w='11730' x='87683' y='11179'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='9356' id='72' name='Openings Per Rating' param='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:abs_rating:qk]' values='database' w='11730' x='87683' y='21021'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='80' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98056' id='79' param='vert' w='98826' x='587' y='972'>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='9356' id='72' name='Openings Per Rating' param='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:abs_rating:qk]' values='database' w='11730' x='87683' y='21021'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98056' id='12' is-fixed='true' name='Openings Per Rating' w='61583' x='587' y='972'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10207' id='16' name='Openings Per Rating' pane-specification-id='0' param='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]' w='11730' x='87683' y='972'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98056' id='61' is-fixed='true' name='Complexity of Opening' w='25513' x='62170' y='972'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9842' id='62' name='Complexity of Opening' pane-specification-id='0' param='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:abs_rating:qk]' w='11730' x='87683' y='11179'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EA112686-333A-452D-B81B-7F86B4EC722E}' />
    </dashboard>
    <dashboard name='Chess Analysis' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Chess Data Analysis&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#c0c0c0' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='width' value='196' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98056' id='1' param='vert' removable='false' w='98826' x='587' y='972'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='6075' id='3' w='98826' x='587' y='972' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' fixed-size='103' h='12515' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98826' x='587' y='7047' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='79466' id='5' paired-zone-id='4' removable='false' w='98826' x='587' y='19562'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Intro' captured-sheet='Introduction' id='3'>
                    <capturedDeltas>
                      <dashboard name='Introduction'>
                        <zone id='3'>
                          <formatted-text>
                            <run fontsize='12'>In this anlaysis, I aim to find out whether:  certain opening moves are likely to be used given one&apos;s colour (which matters given that white goes first while black can decide the opening ply) ; and whether great differences in absolute rating will lead to different choices in opening moves. </run>
                            <run>Æ&#10;&#10;</run>
                            <run fontsize='12'>Our data consists of over 20,000 matches on Lichess, an online competitive chess playing website.  The wins between black and white are roughly and while most matches are rated (meaning they were played competitively), there is a great diversity in player rankings, from novice to master. </run>
                          </formatted-text>
                        </zone>
                      </dashboard>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='EDA: Wins By Colour' captured-sheet='Wins per Colour' id='7' />
                  <story-point caption='EDA: Most Popular Openings' captured-sheet='Most Popular Openings' id='8'>
                    <capturedDeltas>
                      <worksheet name='Most Popular Openings'>
                        <filter class='quantitative' column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[__tableau_internal_object_id__].[cnt:Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE:qk]' included-values='in-range'>
                          <min>1</min>
                          <max>2502</max>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='EDA: Move Wins by Colour' captured-sheet='Opening Move Wins by Colour' id='9' />
                  <story-point caption='EDA: Openings by Rating' captured-sheet='Openings Per Rating' id='10'>
                    <capturedDeltas>
                      <worksheet name='Openings Per Rating'>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='horizontal'>
                              <node-reference>
                                <axis>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:abs_rating:qk]</axis>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='1. Does colour influence opeining choice?' captured-sheet='Opening Preferences by Colour' id='1' />
                  <story-point caption='2. Does Rating difference influence opening choice?' captured-sheet='Absolute Rating Analysis' id='11' />
                  <story-point caption='Research Findings' captured-sheet='Opening Preferences by Colour' id='2'>
                    <capturedDeltas>
                      <worksheet name='Opening Move Wins by Colour'>
                        <filter column='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[Action (Cleaned Opening Name)]' delta-type='removed' />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='59052' hidden='true' id='6' story-point-id='2' w='63490' x='17595' y='29283'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#666666' fontsize='11'>When it comes to opening move choice, it is clear that the more well known moves, such as the Sicilian Defense, inevitably constitute the majority of wins, regardless of colour; however, certain moves such as the Van&apos;t Kruj&apos;s Opening, seem to work more in black&apos;s favour than whites, suggesting that certain opening moves may be more beneficial to one side than another. </run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontsize='11'>With regards to the influence of absolute rating on choice of opening,  great differences in  rating do not correlate to more complex openings in terms of ply length (each person&apos;s move in a turn is called a ply; therefore there are two plies per turn); however, when one looks at the openings that were used when the ratings difference was most extreme, one finds a number of those openings do not feature in the list of top openings generally used in the dataset. This is to be expected, given that more experienced players are more likely to be familiar with such moves. </run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='20292' hidden='true' id='8' story-point-id='7' w='40396' x='587' y='55164'>
          <formatted-text>
            <run>Breakdown of wins between black and white. The split is fairly even with only a slight bias towards white.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='9535' hidden='true' id='9' story-point-id='8' w='33333' x='24873' y='67971'>
          <formatted-text>
            <run>List of Most Popular Openings, with Wins broken down by Colour</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='38509' hidden='true' id='10' story-point-id='9' w='23028' x='74109' y='27628'>
          <formatted-text>
            <run fontsize='11'>A top-15 list of the top opening moves which led to a win, broken down by colour. While popular opening moves, such as the Sicilian Defense top the list, other victories, namely the Van&apos;t Kruij&apos;s Opening, seem to work more in black&apos;s favour than white&apos;s. </run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='40098' hidden='true' id='11' story-point-id='10' w='16603' x='72710' y='59046'>
          <formatted-text>
            <run fontsize='12'>Here, we list the top 20 opening moves that resulted in wins based on the average of the absolute ratings between the two players, broken down by colour.  </run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='45443' hidden='true' id='12' story-point-id='11' w='12537' x='86290' y='53220'>
          <formatted-text>
            <run fontsize='11'>When one slides the average absolute rating bar, one can see that less common moves are used, the more extreme the rating. </run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='28919' id='13' story-point-id='1' w='14003' x='74047' y='56258'>
          <formatted-text>
            <run fontsize='10'>Analysing the wins, one can observe that some openings appear to favour one colour more than the other.</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{47ADC50A-11C7-4E1D-A924-CF834F8C82D8}' />
    </dashboard>
    <dashboard name='Introduction'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#dfedeb' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='31228' id='3' w='98826' x='587' y='52126'>
            <formatted-text>
              <run fontsize='12'>In this anlaysis, we aim to find out whether certain opening moves are likely to be used given one&apos;s choice of colour (which matters given that white goes first) and whether great differences in absolute rating will lead to different choices in opening moves. </run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='12'>Our data consists of over 20,000 matches on Lichess, an online competitive chess playing website, with a largely even split betweeen white and black wins.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' h='39975' id='7' is-scaled='1' param='C:/Users/robii/Desktop/DATA Project/course-project-group_6025/images/Chess_Board.png' w='43988' x='587' y='12151'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' h='39975' id='74' is-scaled='1' param='C:/Users/robii/Desktop/DATA Project/course-project-group_6025/images/ChessSet.jpg' w='54838' x='44575' y='12151'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='11179' id='75' w='98826' x='587' y='972'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontsize='36'>Chess Data Analysis </run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='15674' id='76' w='98826' x='587' y='83354'>
            <formatted-text>
              <run bold='true' fontsize='16'>Data Source: </run>
              <run auto-url='true' bold='true' fontsize='16' hyperlink='tabdoc:load-url url=&amp;quot;https://www.kaggle.com/datasnaek/chess&amp;quot;'>https://www.kaggle.com/datasnaek/chess</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='102' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98056' id='101' param='vert' w='98826' x='587' y='972'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='11179' id='75' w='98826' x='587' y='972'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontsize='36'>Chess Data Analysis </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' fixed-size='280' h='39975' id='7' is-fixed='true' is-scaled='1' param='C:/Users/robii/Desktop/DATA Project/course-project-group_6025/images/Chess_Board.png' w='43988' x='587' y='12151'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' fixed-size='280' h='39975' id='74' is-fixed='true' is-scaled='1' param='C:/Users/robii/Desktop/DATA Project/course-project-group_6025/images/ChessSet.jpg' w='54838' x='44575' y='12151'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='31228' id='3' w='98826' x='587' y='52126'>
                  <formatted-text>
                    <run fontsize='12'>In this anlaysis, we aim to find out whether certain opening moves are likely to be used given one&apos;s choice of colour (which matters given that white goes first) and whether great differences in absolute rating will lead to different choices in opening moves. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>Our data consists of over 20,000 matches on Lichess, an online competitive chess playing website, with a largely even split betweeen white and black wins.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='15674' id='76' w='98826' x='587' y='83354'>
                  <formatted-text>
                    <run bold='true' fontsize='16'>Data Source: </run>
                    <run auto-url='true' bold='true' fontsize='16' hyperlink='tabdoc:load-url url=&amp;quot;https://www.kaggle.com/datasnaek/chess&amp;quot;'>https://www.kaggle.com/datasnaek/chess</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4945D3C6-82F9-45A7-A097-2911B258EA0E}' />
    </dashboard>
    <dashboard name='Opening Preferences by Colour'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Opening Move Trends by Colour and Rating</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='border-width' value='0' />
          <format attr='border-style' value='none' />
          <format attr='background-color' value='#00000000' />
          <format attr='font-size' value='12' />
          <format attr='font-weight' value='normal' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='font-size' value='12' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Project Data+' name='federated.1m1kh5l1vbg2sx1dsof2u1u3wj30' />
      </datasources>
      <datasource-dependencies datasource='federated.1m1kh5l1vbg2sx1dsof2u1u3wj30'>
        <column aggregation='CountD' caption='Cleaned Opening Name' datatype='string' name='[cleaned_opening_name]' role='dimension' type='nominal' />
        <column-instance column='[cleaned_opening_name]' derivation='None' name='[none:cleaned_opening_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
        <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98056' id='101' param='horz' w='98826' x='587' y='972'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98056' id='67' param='horz' w='98826' x='587' y='972'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98056' id='58' param='horz' w='98826' x='587' y='972'>
                <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98056' id='19' param='vert' w='98826' x='587' y='972'>
                  <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' fixed-size='28' h='4374' id='20' is-fixed='true' w='98826' x='587' y='972'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='93682' id='7' param='horz' w='98826' x='587' y='5346'>
                    <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='93682' id='5' w='17594' x='587' y='5346'>
                      <zone h='37546' id='3' name='Wins per Colour' w='17594' x='587' y='5346'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='56136' id='10' name='Most Popular Openings' w='17594' x='587' y='42892'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                    <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' fixed-size='1108' h='93682' id='12' is-fixed='true' w='81232' x='18181' y='5346'>
                      <zone _.fcp.SetMembershipControl.false...type='empty' _.fcp.SetMembershipControl.true...type-v2='empty' h='3912' id='85' w='75726' x='18181' y='5346' />
                      <zone h='89770' id='21' name='Opening Move Wins by Colour' w='70433' x='18181' y='9258'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='95' h='69468' id='39' is-fixed='true' name='Opening Move Wins by Colour' param='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]' values='database' w='10799' x='88614' y='29560'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='20302' id='102' mode='checkdropdown' name='Wins per Colour' param='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]' values='database' w='10799' x='88614' y='9258'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>Opening Move Trends by Colour and Rating</run>
                <run fontalignment='1'>Æ&#10;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='169' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98056' id='168' param='vert' w='98826' x='587' y='972'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' fixed-size='28' h='4374' id='20' w='98826' x='587' y='972'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='20302' id='102' mode='checkdropdown' name='Wins per Colour' param='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]' values='database' w='10799' x='88614' y='9258'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37546' id='3' is-fixed='true' name='Wins per Colour' w='17594' x='587' y='5346'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='95' h='69468' id='39' mode='checkdropdown' name='Opening Move Wins by Colour' param='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]' values='database' w='10799' x='88614' y='29560'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='89770' id='21' is-fixed='true' name='Opening Move Wins by Colour' w='70433' x='18181' y='9258'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='56136' id='10' is-fixed='true' name='Most Popular Openings' w='17594' x='587' y='42892'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9C2F6648-C34C-44B3-A95B-C8DD9386EE68}' />
    </dashboard>
  </dashboards>
  <windows source-height='44'>
    <window class='dashboard' name='Introduction'>
      <viewpoints />
      <active id='3' />
      <simple-id uuid='{34C814C7-EB81-4FA6-A1D2-39DB3E9C0D42}' />
    </window>
    <window class='worksheet' name='Wins per Colour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[__tableau_internal_object_id__].[cnt:Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1A5F705C-4CAA-4382-BBBF-CD156030A2BD}' />
    </window>
    <window class='worksheet' name='Most Popular Openings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[__tableau_internal_object_id__].[cnt:Project Data.csv_AEB65404B5A54B0DB94D159C162DE9FE:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{77C04CAE-A618-47C4-896E-41EDD50302AE}' />
    </window>
    <window class='worksheet' name='Opening Move Wins by Colour'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='45'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A0F8607A-30C5-43EC-A760-7F0E83AB8E57}' />
    </window>
    <window class='worksheet' name='Openings Per Rating'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]' type='filter' />
            <card param='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]' type='filter' />
            <card param='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:abs_rating:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]</field>
            <field>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C775131E-97CA-4B27-AEF3-5A53F3745AC8}' />
    </window>
    <window class='worksheet' name='Complexity of Opening'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[avg:abs_rating:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:cleaned_opening_name:nk]</field>
            <field>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:opening_ply:qk]</field>
            <field>[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F6B8A656-8680-4D94-B4EE-63CA82909E07}' />
    </window>
    <window class='dashboard' name='Opening Preferences by Colour'>
      <viewpoints>
        <viewpoint name='Most Popular Openings' />
        <viewpoint name='Opening Move Wins by Colour'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Wins per Colour'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1FAB3274-A778-4107-B981-3C2A456E968B}' />
    </window>
    <window class='dashboard' name='Absolute Rating Analysis'>
      <viewpoints>
        <viewpoint name='Complexity of Opening'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Openings Per Rating'>
          <zoom type='entire-view' />
          <highlight field='[federated.1m1kh5l1vbg2sx1dsof2u1u3wj30].[none:winner:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='72' />
      <simple-id uuid='{7789E94B-0E1E-41E4-82DB-26D4E70BC6C7}' />
    </window>
    <window class='dashboard' maximized='true' name='Chess Analysis'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{32A344AD-4FAC-40CB-9926-6F3FB661C948}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Absolute Rating Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Chess Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Complexity of Opening' width='131'>
      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
    </thumbnail>
    <thumbnail height='192' name='Introduction' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Most Popular Openings' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Opening Move Wins by Colour' width='192'>
      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
      eanbi/z/BfljjuJF65cAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Opening Preferences by Colour' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Openings Per Rating' width='192'>
      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
      LQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Wins per Colour' width='192'>
      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
      A1cYVUghXl9OAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
